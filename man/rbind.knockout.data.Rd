% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-combine.R
\name{rbind.knockout.data}
\alias{rbind.knockout.data}
\title{#' @title Combine objects
#'
#' @description Combine several objects to a single objects.
#'
#' @export
#' @docType methods
#' @rdname rbind-methods
#'
#' @import data.table
#'
#' @param ... the objects to be combined
rbind <- function()
  "rbind",
  function(...)
  {
    standardGeneric("rbind")
  },
  package="knockout"
)
#' @rdname rbind-methods
#' @aliases rbind,knockout.data-method
#'
#' @import data.table
setMethod(
  "rbind",
  "knockout.data",
  function(...)
  {
    args  <- list(...)
    if (length(args) < 2) return(args[[1]])
    types <- unlist(lapply(args, function(e) e@.type))
    if(any(types != types[1])) stop("Data-types do not agree")
    dat   <- data.table::rbindlist(lapply(args, function(e) e@.data))
    new("knockout.data", .data=dat, .type=types[1])
  }
)}
\usage{
\method{rbind}{knockout.data}(...)
}
\description{
#' @title Combine objects
#'
#' @description Combine several objects to a single objects.
#'
#' @export
#' @docType methods
#' @rdname rbind-methods
#'
#' @import data.table
#'
#' @param ... the objects to be combined
rbind <- function()
  "rbind",
  function(...)
  {
    standardGeneric("rbind")
  },
  package="knockout"
)
#' @rdname rbind-methods
#' @aliases rbind,knockout.data-method
#'
#' @import data.table
setMethod(
  "rbind",
  "knockout.data",
  function(...)
  {
    args  <- list(...)
    if (length(args) < 2) return(args[[1]])
    types <- unlist(lapply(args, function(e) e@.type))
    if(any(types != types[1])) stop("Data-types do not agree")
    dat   <- data.table::rbindlist(lapply(args, function(e) e@.data))
    new("knockout.data", .data=dat, .type=types[1])
  }
)
}
