% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inference_lmm.R
\docType{methods}
\name{hm}
\alias{hm}
\alias{hm,PerturbationData-method}
\title{Jointly analyse multiple genetic perturbation screens using a
 hierchical model}
\usage{
hm(obj, formula = Readout ~ Condition + (1 | GeneSymbol) + (1 |
  Condition:GeneSymbol), drop = TRUE, weights = 1, bootstrap.cnt = 0,
  effect.size = 0.05, qval.threshold = 0.2)

\S4method{hm}{PerturbationData}(obj, formula = Readout ~ Condition + (1 |
  GeneSymbol) + (1 | Condition:GeneSymbol), drop = TRUE, weights = 1,
  bootstrap.cnt = 0, effect.size = 0.05, qval.threshold = 0.2)
}
\arguments{
\item{obj}{an \code{PerturbationData} object}

\item{formula}{a \code{formula} object that is used to model the readout
of your data set. If no formula is provided, the formula
`Readout ~ Condition + (1|GeneSymbol) +  (1|Condition:GeneSymbol)` is used. For
other data sets with more variables, it might makes sense to use other
fixed and random effects}

\item{drop}{boolean if genes that are not found in every Condition should
be dropped}

\item{weights}{a numeric vector used as weights for the single
perturbations}

\item{bootstrap.cnt}{the number of bootstrap runs you want to do in order
to estimate a significance level for the gene effects}

\item{effect.size}{the absolute, relative effect size used for
hit prioritization}

\item{qval.threshold}{the q-value threshold used for hit prioritization
if \code{bootstrap.cnt} is set}
}
\value{
returns a \code{HMAnalysedPerturbationData} object
}
\description{
Analyse multiple different genetic perturbation screens at once
 using a hierarchical model. The model estimates general relative effect
 sizes for genes across all experiments. This could for instance be a
 pan-pathogenic host factor, i.e. a gene that decisively impacts the
 life-cycle of multiple pathogens.
}
\examples{
 data(rnaiscreen)
 rnaiscreen.normalized <- preprocess(rnaiscreen, normalize="robust-z.score")
 res                   <- hm(rnaiscreen.normalized, effect.size=0.01)
}
